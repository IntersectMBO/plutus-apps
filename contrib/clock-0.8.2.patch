diff --git b/contrib/clock-0.8.2/clock.cabal a/contrib/clock-0.8.2/clock.cabal
index 253033538..8a73b9640 100644
--- b/contrib/clock-0.8.2/clock.cabal
+++ a/contrib/clock-0.8.2/clock.cabal
@@ -84,6 +84,8 @@ library
     if flag(llvm)
       ghc-options:       -fllvm -optlo-O3
 
+    if os(ghcjs)
+      js-sources: jsbits/gettime.js
 
 test-suite test
     default-language: Haskell2010
diff --git b/contrib/clock-0.8.2/jsbits/gettime.js a/contrib/clock-0.8.2/jsbits/gettime.js
new file mode 100644
index 000000000..a09f351b9
--- /dev/null
+++ a/contrib/clock-0.8.2/jsbits/gettime.js
@@ -0,0 +1,23 @@
+function h$clock_gettime(when, p_d, p_o) {
+  /* XXX: guess if we have to write 64 bit values:
+            alloca is often used and will give us 16 bytes
+            if timespec contains two 64 bit values
+          but we really should fix this by not having hsc2hs values
+          from the build system leak here
+   */
+  var is64 = p_d.i3.length == 4 && p_o == 0;
+  var o  = p_o >> 2,
+      t  = Date.now ? Date.now() : new Date().getTime(),
+      tf = Math.floor(t / 1000),
+      tn = 1000000 * (t - (1000 * tf));
+  if(is64) {
+    p_d.i3[o]   = tf|0;
+    p_d.i3[o+1] = 0;
+    p_d.i3[o+2] = tn|0;
+    p_d.i3[o+3] = 0;
+  } else {
+    p_d.i3[o]   = tf|0;
+    p_d.i3[o+1] = tn|0;
+  }
+  return 0;
+}
