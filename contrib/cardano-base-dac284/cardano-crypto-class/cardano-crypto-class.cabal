cabal-version: 2.2

name:                cardano-crypto-class
version:             2.0.0
synopsis:            Type classes abstracting over cryptography primitives for Cardano
description:         Type classes abstracting over cryptography primitives for Cardano
license:             Apache-2.0
license-files:
  LICENSE
  NOTICE
author:              IOHK
maintainer:          operations@iohk.io
copyright:           2019-2021 IOHK
category:            Currency
build-type:          Custom
extra-source-files:  README.md
                     jsbits/libsodium.c
                     jsbits/libsodium.js
                     jsbits/wrappers.js.pp

custom-setup
  setup-depends:
    base  >= 4.5,
    Cabal >= 2.4


flag development
    description: Disable `-Werror`
    default: False
    manual: True

common base                         { build-depends: base                             >= 4.14       && < 4.15     }

common project-config
  default-language:     Haskell2010

  ghc-options:          -Wall
                        -Wcompat
                        -Wincomplete-record-updates
                        -Wincomplete-uni-patterns
                        -Wpartial-fields
                        -Wredundant-constraints
                        -Wunused-packages

  if (!flag(development))
    ghc-options:        -Werror

library
  import:               base, project-config
  hs-source-dirs:       src
  exposed-modules:
                        Cardano.Crypto.DSIGN
                        Cardano.Crypto.Hash
                        Cardano.Crypto.KES
                        Cardano.Crypto.VRF

                        Cardano.Crypto.DSIGN.Class
                        Cardano.Crypto.DSIGN.Ed25519
                        Cardano.Crypto.DSIGN.Ed448
                        Cardano.Crypto.DSIGN.Mock
                        Cardano.Crypto.DSIGN.NeverUsed

                        Cardano.Crypto.Hash.Blake2b
                        Cardano.Crypto.Hash.Class
                        Cardano.Crypto.Hash.NeverUsed
                        Cardano.Crypto.Hash.SHA256
                        Cardano.Crypto.Hash.SHA3_256
                        Cardano.Crypto.Hash.Short
                        Cardano.Crypto.Hash.Keccak256

                        Cardano.Crypto.KES.Class
                        Cardano.Crypto.KES.Mock
                        Cardano.Crypto.KES.NeverUsed
                        Cardano.Crypto.KES.Simple
                        Cardano.Crypto.KES.Single
                        Cardano.Crypto.KES.Sum

                        Cardano.Crypto.PinnedSizedBytes
                        Cardano.Crypto.Seed
                        Cardano.Crypto.Util

                        Cardano.Crypto.VRF.Class
                        Cardano.Crypto.VRF.Mock
                        Cardano.Crypto.VRF.NeverUsed
                        Cardano.Crypto.VRF.Simple

                        Cardano.Crypto.Libsodium
                        Cardano.Crypto.Libsodium.C
                        Cardano.Crypto.Libsodium.Constants
                        Cardano.Crypto.Libsodium.Hash
                        Cardano.Crypto.Libsodium.Init
                        Cardano.Crypto.Libsodium.Memory
                        Cardano.Crypto.Libsodium.Memory.Internal
                        Cardano.Crypto.Libsodium.MLockedBytes
                        Cardano.Crypto.Libsodium.MLockedBytes.Internal
                        Cardano.Crypto.Libsodium.UnsafeC

                        Cardano.Foreign

  other-modules:        Cardano.Crypto.PackedBytes

  build-depends:        aeson
                      , base
                      , base16-bytestring >= 1
                      , bytestring
                      , cardano-binary
                      , cardano-prelude
                      , cryptonite
                      , deepseq
                      , integer-gmp
                      , ghc-prim
                      , memory
                      , nothunks
                      , primitive
                      , serialise
                      , text
                      , transformers
                      , vector

  if os(ghcjs)
    js-sources: jsbits/bindings.js.pp
    -- we don't have any c sources, so just the exported should be fine.
    extra-bundled-libraries: EMCCcardano-crypto-class.exported

  pkgconfig-depends:    libsodium

test-suite test-memory-example
  import:               base, project-config
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       memory-example
  main-is:              Main.hs

  build-depends:        base
                      , bytestring
                      , cardano-crypto-class

  if os(linux) || os(osx)
    build-depends:      unix
  if os(ghcjs)
    js-sources: dist/build/emcc/lib.js
    -- this is a hack, as js-sources apparently doesn't work.
    ghc-options: dist/build/emcc/lib.js