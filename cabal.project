-- Custom repository for cardano haskell packages
-- See https://github.com/input-output-hk/cardano-haskell-packages on how to use CHaP in a Haskell project.
repository cardano-haskell-packages
  url: https://input-output-hk.github.io/cardano-haskell-packages
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

-- See CONTRIBUTING.adoc for how to update index-state
index-state:
  , hackage.haskell.org 2023-07-27T00:00:00Z
  , cardano-haskell-packages 2023-07-27T00:00:00Z

packages: cardano-node-emulator
          cardano-node-socket-emulator
          doc
          freer-extras
          pab-blockfrost
          plutus-chain-index
          plutus-chain-index-core
          plutus-contract
          plutus-contract-certification
          plutus-contract-model
          plutus-example
          plutus-ledger
          plutus-pab
          plutus-pab-executables
          plutus-script-utils
          plutus-tx-constraints
          plutus-use-cases

-- We never, ever, want this.
write-ghc-environment-files: never

-- Always build tests and benchmarks.
tests: true
benchmarks: true

-- The only sensible test display option, since it allows us to have colourized
-- 'tasty' output.
test-show-details: direct

allow-newer:
  -- cardano-ledger packages need aeson >2, the following packages have a
  -- too restictive upper bounds on aeson, so we relax them here. The hackage
  -- trustees can make a revision to these packages cabal file to solve the
  -- issue permanently.
  , ekg:aeson
  , ekg-json:aeson
  , openapi3:aeson
  , servant:aeson
  , servant-client-core:aeson
  , servant-server:aeson
  , servant-foreign:lens
  , blockfrost-api:lens
  -- temporary
  , quickcheck-contractmodel:*

constraints:
  -- cardano-wallet needs
  , cardano-api ^>=8.2
  , cardano-slotting >= 0.1
  , ouroboros-network ^>= 0.8.1.0

  -- cardano-prelude-0.1.0.0 needs
  -- , protolude <0.3.1

  -- cardano-ledger-byron-0.1.0.0 needs
  -- , cardano-binary <1.5.0.1

  -- plutus-core-1.0.0.1 needs
  -- , cardano-crypto-class >2.0.0.0
  -- , algebraic-graphs <0.7

  -- cardano-ledger-core-0.1.0.0 needs
  -- , cardano-crypto-class <2.0.0.1

  -- cardano-crypto-class-2.0.0.0.1 needs
  -- , cardano-prelude <0.1.0.1

  -- dbvar from cardano-wallet needs
  -- , io-classes <0.3.0.0

  -- newer typed-protocols need io-classes>=0.3.0.0 which is incompatible with dbvar's constraint above
  -- , typed-protocols==0.1.0.0

  -- , aeson >= 2

  -- , hedgehog >= 1.1

  -- , resource-pool <0.4.0.0

  -- , http2 <4.0.0

  -- ouroboros-consensus-shelley-0.1.0.1 needs
  -- , ouroboros-consensus-protocol==0.1.0.1

-- The plugin will typically fail when producing Haddock documentation. However,
-- in this instance you can simply tell it to defer any errors to runtime (which
-- will never happen since you're building documentation).
--
-- So, any package using 'PlutusTx.compile' in the code for which you need to
-- generate haddock documentation should use the following 'haddock-options'.
package plutus-ledger
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-script-utils
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-contract
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"
package plutus-contract-model
  haddock-options: "--optghc=-fplugin-opt PlutusTx.Plugin:defer-errors"

-- These packages appear in our dependency tree and are very slow to build.
-- Empirically, turning off optimization shaves off ~50% build time.
-- It also mildly improves recompilation avoidance.
-- For dev work we don't care about performance so much, so this is okay.
package cardano-ledger-alonzo
  optimization: False
package ouroboros-consensus-shelley
  optimization: False
package ouroboros-consensus-cardano
  optimization: False
package cardano-api
  optimization: False
package cardano-wallet
  optimization: False
package cardano-wallet-core
  optimization: False
package cardano-wallet-cli
  optimization: False
package cardano-wallet-launcher
  optimization: False
package cardano-wallet-core-integration
  optimization: False

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-wallet
    tag: 3f0d2f3abe706958fab8cdc528184068bd0453c9
    --sha256: 1xbr5qrz716mh3vhng64m4v6zhp03x5lcf0kld5mmm1yij0fadwa
    subdir:
      -- lib/balance-tx
      -- lib/coin-selection
      -- lib/delta-store
      -- lib/delta-table
      -- lib/delta-types
      -- lib/launcher
      -- lib/numeric
      -- lib/primitive
      -- lib/test-utils
      lib/text-class
      -- lib/wai-middleware-logging
      lib/wallet
      -- lib/wallet-benchmarks

-- Should follow cardano-wallet.
source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-addresses
    tag: 6b55f96d57a181f898eb2a50531d3ae4280c549c
    --sha256: 0yygam995i3mawk6hfgxb6v918phvqzyipzhjflff0l6zfrldy7f
    subdir:
      -- cardano-addresses-cli
      command-line
      -- cardano-addresses
      core

source-repository-package
    type: git
    location: https://github.com/input-output-hk/marconi
    tag: 7285a3bc1ae53bf672c7cc2359210c6c29fbce44
    subdir:
      cardano-streaming
      marconi-chain-index
      marconi-core
